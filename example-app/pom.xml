<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.bbende.k8s</groupId>
    <artifactId>example-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Example App</name>

    <modules>
      <module>example-frontend</module>     
      <module>example-backend</module>
      <module>example-api</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <!-- spring-boot-maven properties -->
        <image.skip>true</image.skip>
        <image.publish>false</image.publish>
        <image.name>${project.artifactId}</image.name>
        <image.tag>${project.version}</image.tag>
        <image.publish.registry.url></image.publish.registry.url>
        <image.publish.registry.username></image.publish.registry.username>
        <image.publish.registry.password></image.publish.registry.password>
        <!-- jib properties -->
        <jib-maven-plugin.version>3.1.1</jib-maven-plugin.version>
        <jib-spring-boot-extension-maven.version>0.1.0</jib-spring-boot-extension-maven.version>
        <jib.skip>true</jib.skip>
        <jib.from.image>adoptopenjdk:11-jre-hotspot</jib.from.image>
        <jib.registry.username></jib.registry.username>
        <jib.registry.password></jib.registry.password>
        <jib.image.prefix>docker.io/bbende</jib.image.prefix>
        <jib.image.path>${jib.image.prefix}/${project.artifactId}</jib.image.path>
        <jib.image.tag>${project.version}</jib.image.tag>
        <jib.allow.insecure.registries>false</jib.allow.insecure.registries>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Attaches spring-boot:build-image to the package phase with skip=true and publish=false by default -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build-image</goal>
                            </goals>
                            <configuration>
                                <skip>${image.skip}</skip>
                                <image>
                                    <name>${image.name}:${image.tag}</name>
                                    <publish>${image.publish}</publish>
                                    <env>
                                        <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                                    </env>
                                </image>
                                <docker>
                                    <publishRegistry>
                                        <url>${image.publish.registry.url}</url>
                                        <username>${image.publish.registry.username}</username>
                                        <password>${image.publish.registry.password}</password>
                                    </publishRegistry>
                                </docker>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Use jib as an alternative when building in an ARM environment -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <!-- Use the jib spring-boot extensions to exclude dev tools
                         See: https://github.com/GoogleContainerTools/jib/issues/2336 -->
                    <dependencies>
                        <dependency>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-spring-boot-extension-maven</artifactId>
                            <version>${jib-spring-boot-extension-maven.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>jib-build</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <skip>${jib.skip}</skip>
                                <from>
                                    <image>${jib.from.image}</image>
                                </from>
                                <to>
                                    <image>${jib.image.path}</image>
                                    <tags>
                                        <tag>${jib.image.tag}</tag>
                                    </tags>
                                    <auth>
                                        <username>${jib.registry.username}</username>
                                        <password>${jib.registry.password}</password>
                                    </auth>
                                </to>
                                <allowInsecureRegistries>${jib.allow.insecure.registries}</allowInsecureRegistries>
                                <container>
                                    <ports>
                                        <port>8080</port>
                                    </ports>
                                    <environment>
                                        <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                                    </environment>
                                    <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                                </container>
                                <pluginExtensions>
                                    <pluginExtension>
                                        <implementation>com.google.cloud.tools.jib.maven.extension.springboot.JibSpringBootExtension</implementation>
                                    </pluginExtension>
                                </pluginExtensions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- spring-boot-maven-plugin - Build images, but don't publish -->
        <profile>
            <id>build-image</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <image.skip>false</image.skip>
            </properties>
        </profile>
        <!-- spring-boot-maven-plugin - Publish to Docker Hub -->
        <profile>
            <id>docker-hub</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <image.skip>false</image.skip>
                <image.publish>true</image.publish>
                <image.name>docker.io/bbende/${project.artifactId}</image.name>
                <image.publish.registry.url>https://index.docker.io/v1/</image.publish.registry.url>
                <image.publish.registry.username>bbende</image.publish.registry.username>
                <!--suppress UnresolvedMavenProperty -->
                <image.publish.registry.password>${env.DOCKERHUB_TOKEN}</image.publish.registry.password>
            </properties>
        </profile>
        <!-- spring-boot-maven-plugin - Publish to GitHub Packages -->
        <profile>
            <id>github</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <image.skip>false</image.skip>
                <image.publish>true</image.publish>
                <image.name>ghcr.io/bbende/${project.artifactId}</image.name>
                <image.publish.registry.url>https://ghcr.io</image.publish.registry.url>
                <image.publish.registry.username>bbende</image.publish.registry.username>
                <!--suppress UnresolvedMavenProperty -->
                <image.publish.registry.password>${env.GITHUB_PACKAGES_TOKEN}</image.publish.registry.password>
            </properties>
        </profile>
        <!-- spring-boot-maven-plugin - Publish to Azure Container Registry -->
        <profile>
            <id>acr</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <image.skip>false</image.skip>
                <image.publish>true</image.publish>
                <image.name>bbende.azurecr.io/${project.artifactId}</image.name>
                <image.publish.registry.url>https://bbende.azurecr.io</image.publish.registry.url>
                <image.publish.registry.username>bbende</image.publish.registry.username>
                <!--suppress UnresolvedMavenProperty -->
                <image.publish.registry.password>${env.ACR_ADMIN_PASSWORD}</image.publish.registry.password>
            </properties>
        </profile>
        <!-- spring-boot-maven-plugin - Publish to Google Container Registry -->
        <profile>
            <id>gcr</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <gcp.project.id>spartan-buckeye-308802</gcp.project.id>
                <image.skip>false</image.skip>
                <image.publish>true</image.publish>
                <image.name>gcr.io/${gcp.project.id}/${project.artifactId}</image.name>
                <image.publish.registry.url>https://gcr.io</image.publish.registry.url>
                <image.publish.registry.username>_json_key</image.publish.registry.username>
                <!--suppress UnresolvedMavenProperty -->
                <image.publish.registry.password>${env.GOOGLE_JSON_KEY}</image.publish.registry.password>
            </properties>
        </profile>
        <!-- spring-boot-maven-plugin - Publish to AWS Elastic Container Registry -->
        <profile>
            <id>ecr</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- Update to custom alias once approved -->
                <ecr.registry.id>e5j7l2s3</ecr.registry.id>
                <image.skip>false</image.skip>
                <image.publish>true</image.publish>
                <image.name>public.ecr.aws/${ecr.registry.id}/${project.artifactId}</image.name>
                <image.publish.registry.url>https://public.ecr.aws</image.publish.registry.url>
                <image.publish.registry.username>AWS</image.publish.registry.username>
                <!--suppress UnresolvedMavenProperty -->
                <image.publish.registry.password>${env.ECR_LOGIN_PASSWORD}</image.publish.registry.password>
            </properties>
        </profile>
        <!-- jib-maven-plugin - activate jib -->
        <profile>
            <id>jib</id>
            <properties>
                <jib.skip>false</jib.skip>
            </properties>
        </profile>
    </profiles>

</project>
